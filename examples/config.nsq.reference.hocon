# Copyright (c) 2014-2021 Snowplow Analytics Ltd. All rights reserved.
#
# This program is licensed to you under the Apache License Version 2.0, and
# you may not use this file except in compliance with the Apache License
# Version 2.0.  You may obtain a copy of the Apache License Version 2.0 at
# http://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Apache License Version 2.0 is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the Apache License Version 2.0 for the specific language
# governing permissions and limitations there under.

# This file (config.nsq.reference.hocon) contains a template with
# configuration options for the Elasticsearch Loader.

"input": {
  # Sources currently supported are:
  # "kinesis" for reading records from a Kinesis stream
  # "stdin" for reading unencoded tab-separated events from stdin
  # If set to "stdin", JSON documents will not be sent to Elasticsearch
  # but will be written to stdout.
  # "nsq" for reading unencoded tab-separated events from NSQ
  "type": "nsq"

  # Stream name for incoming data
  "streamName": "test-nsq-stream"

  # Channel name for NSQ source
  # If more than one application reading from the same NSQ topic at the same time,
  # all of them must have unique channel name for getting all the data from the same topic
  "channelName": "test-nsq-channel-name"

  # Host name for nsqlookupd
  "nsqlookupdHost": "127.0.0.1"

  # HTTP port for nsqd
  "nsqlookupdPort": 34189

  # Events are accumulated in a buffer before being sent to Elasticsearch.
  # The buffer is emptied whenever the number of stored records exceeds recordLimit
  "buffer": {
    "recordLimit": 1000
  }
}

"output": {
  "good": {
    # Good sinks currently supported are:
    # "elasticsearch" for writing good records to Elasticsearch
    # "stdout" for writing good records to stdout
    "type": "elasticsearch"

    # Events are indexed using an Elasticsearch Client
    # - endpoint: the cluster endpoint
    # - port: the port the cluster can be accessed on
    #   - for http this is usually 9200
    #   - for transport this is usually 9300
    # - username (optional, remove if not active): http basic auth username
    # - password (optional, remove if not active): http basic auth password
    # - shardDateFormat (optional, remove if not needed): formatting used for sharding good stream, i.e. _yyyy-MM-dd
    # - shardDateField (optional, if not specified derived_tstamp is used): timestamp field for sharding good stream
    # - max-timeout: the maximum attempt time before a client restart
    # - ssl: if using the http client, whether to use ssl or not
    "client": {
      "endpoint": "localhost"
      "port": 9200
      "username": "es-user"
      "password": "es-pass"
      "shardDateFormat": "_yyyy-MM-dd"
      "shardDateField": "derived_tstamp"
      "maxTimeout": 10000
      "maxRetries": 6
      "ssl": true
    }

    # When using the AWS ES service
    # - signing: if using the http client and the AWS ES service you can sign your requests
    #    http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html
    # - region where the AWS ES service is located
    "aws": {
      "signing": true
      "region": "eu-central-1"
    }

    "cluster": {
      # The Elasticsearch index name
      "index": "good"
      # The Elasticsearch index type.
      # Index types are deprecated in ES >=7.x
      # Therefore, it shouldn't be set with ES >=7.x
      "documentType": "good-doc"
    }

    # Bulk request to Elasticsearch will be splitted to
    # chunks according given limits
    "chunk": {
      "byteLimit": 10000
      "recordLimit": 1000
    }
  }
  "bad" {
    # Bad sinks currently supported are:
    # "kinesis" for writing bad records to Kinesis
    # "stderr" for writing bad records to stderr
    # "nsq" for writing bad records to NSQ
    # "none" for ignoring bad records
    "type": "nsq"

    # Stream name for events which are rejected by Elasticsearch
    "streamName": "test-nsq-bad-stream"

    # Host name for nsqd
    "nsqdHost": "127.0.0.1"
    # HTTP port for nsqd
    "nsqdPort": 24509
  }
}

# "good" for a stream of successfully enriched events
# "bad" for a stream of bad events
# "plain-json" for writing plain json
"purpose": "good"

# Optional section for tracking endpoints
"monitoring": {
  "snowplow": {
    "collector": "localhost:14322"
    "appId": "test-app-id"
  }
}
